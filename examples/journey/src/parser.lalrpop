use scanner::*;
use nodes::*;

grammar;

pub Path: Vec<Token> = {
    <s: Slash> => { vec![s] },
    <t: Terminal> => { vec![t] },
    <s: Slash> <t: Terminal> => { vec![s, t] },
    <s: Slash> <t: Terminal> <p: Path> => {
        let mut v = vec![s, t];
        v.extend(p);
        v
    }
}

pub Terminal: Token = {
    <Literal>,
    <Star>
}

extern {
    type Location = usize;
    type Error = NotPossible;

    enum Token {
        Slash => Token::Slash,
        LParen => Token::LParen,
        RParen => Token::RParen,
        Dot => Token::Dot,
        Or => Token::Or,
        Star => Token::Star(_),
        Symbol => Token::Symbol(_),
        Literal => Token::Literal(_),
    }
}
